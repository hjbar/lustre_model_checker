node incr (tictoc: bool) returns (n: int);
let
  n = if tictoc then 1 else 0;
tel

node pair (t1, t2 : int) returns (r1, r2 : int);
let
  (r1, r2) = (t1, t2);
tel

node update (tic: bool) returns (cpttmp, d: int);
var t1, t2 : int;
let
  (d, cpttmp) = pair(t1, t2);
  (t1, t2) = (incr(tic), (0 -> pre t2));
tel

node check (x: bool) returns (ok: bool);
var n1, n2, cpt : int;
let
  ok = true -> (pre cpt) <= cpt;
  cpt = n1 + n2;
  (n1, n2) = update(x);
tel
